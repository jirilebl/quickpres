# quickpres

HTML scrolling presentation for math classes, with syntax mildly inspired by Markdown

Press j, J, n, or Enter to see what comes next (j is best here) ...

>>>
## How to use

You saw you press j, J, n, or Enter to see what comes next, but there are some differences in scrolling.

* n or Enter will slowly scroll until it finds something to unhide.   If
  there is something to unhide closer to the middle of the page, it unhides it
  without scrolling.  This is one way to go through the presentation,
  especially with long blocks.
>>>
* j will unhide the next thing and also scroll it into view.  This is an
  alternate way to go through the presentation, especially with short blocks.
  Make sure to have blocks that fit on one screen.  The bottom of the new block
  will be scrolled to about 90% of the view port, unless the block is smaller
  than that, in which case it will be scrolled to the top and you'll have to
  scroll through the block manually
>>>
* Backspace or k will hide the last thing and scroll to last block, in the
  same way that j scrolls.
>>>
* J (shift-j) simply unhides the next hidden bit without scrolling.  So you
  can use this in conjunction with the arrow keys or spacebar to scroll.
* K (shift-k) will hide the last thing without scrolling.
>>>
* e will scroll to the end (the End key scrolls a bit too far).
>>>
* A (shift-a) will show all the blocks (the entire presentation) at once.
* B (shift-b) will hide all the blocks (You can also hide them by reloading the page).

>>>
## Syntax

New paragraphs are entered just by leaving an empty line.

So this is a new paragraph.
But this line is still in the second paragraph, even though we put a
linebreak.  Just not an empty line.

>>>
This is a new paragraph so there is some empty space.
To simply break lines without any added space, put a backslash
on a separate line:
\
a) this is good for faking short lists
\
b) or whatnot.
>>>

Note that a few special characters have some meaning when starting a line.
But only if the first character on a line.  So you can usually
get around them having a special meaning by adding a space before.

>>>
## Math

Math is done with MathJax.  For display math use the double
dollar signs:
$$
\int_0^1 x^2 \, dx
$$
>>>
Or the backslash square bracket notation

\[
\sum_{n=1}^\infty \frac{1}{n} .
\]

>>>
We left an empty line for more space.

>>>
You don't want to start new lines in an equation with *, _, !, #, (, backslash, as those
may have special meaning and this script does not really track if you are in a math
environment or not.)  This is especially true for *.
You can put an empty space in front and it will work:
\[
1
 * 3
\]

>>>
Or you can do inline math with $x^2$ or \(\sqrt{2}\), that is,
dollar signs or the backslash round bracket.

>>>
Due to the inline math using the dollar sign you need to escape it with
a slash, \$ (in the presentation you just see a dollar sign),
if you actually want a dollar sign.
Due to this you'll actually need to enter a backslash as
two backslashes: \\.  (But see below about two backslashes on
a separate line)

>>>
## That progressive hidy thingie

If you want to hide the next chuck, put a >>> on a separate line.
Probably want to add an empty line, but really it is a new html division,
so it will always include a new paragraph.
So >>> cannot really split up paragraphs or displayed math.  If you want to do that you have to just do separate displayed math.  So you can't split aligned,
etc., but we don't want to get too fancy here.

>>>
## Using HTML

You can really just include html: <tt>foo</tt> or <b>foo</b>.
But you probably shouldn't get too crazy.  Links, images, etc.
it should all work.
Though there is a quick way to do centered nice images.

>>>
## Running

Easiest is to just stick <tt>quickpres.pl</tt> into the directory where
your content is.  Then run (if on Linux) <tt>./quickpres.pl</tt>,
which will compile <tt>pres.prs</tt> into <tt>pres.html</tt>.
You could also just put it in your path if you want to.

>>>
You can specify the files by: <tt>./quickpres.pl in.prs out.html</tt>.

>>>
If you run: <tt>./quickpres.pl file.prs</tt>, the output will be
in file.html (it will replace the extension with html).

>>>
Adding -a, that is <tt>./quickpres.pl -a in.prs out.html</tt> or
<tt>./quickpres.pl -a</tt> will just show all the
blocks all at once.

>>>
## Headers

Use # for first level headers, ## for second level and ### for third level:

# First
## Second
### Third

The first first-level heading is used as the title for the HTML page.

>>>
## Bullet lists

* Bullet lists
>>>
* are done
* similar
* to markdown with stars.

* this is a bullet (with some leading vertical space)

* Text following a bullet on another line is still
part of the bullet.  If you want a new line that's not
part of the bullet you have the use the backslash
\
This line will be separate.

>>>

*The star must be followed by a space otherwise it is not a bullet

>>>

Beware of bullets in the middle of the paragraph
* that you did not mean, and you just wanted to input
a star.
\
If you need to add a star you can just add a space
 * this is not a bullet.

>>>

Stars are also used for italics, see below.

>>>
## Images

On a new line add !(img.png) to insert img.png, you can add
alt text with ![alt text](img.png)
!(sampleimg.png)

>>>
And now with alt text:
![Alt text](sampleimg.png)

>>>
The above takes at most 90% of the textwidth (but does not scale up if
the image is smaller).
This is usually fine, but sometimes you want to restrict the maximum size to a
smaller width.  Using !!(img.png) will restrict to 50% of the text
width and !!!(img.png) will restrict to 25% of the text width.

!!(sampleimg.png)

!!!(sampleimg.png)

>>>
## Links

Quick links can be added on a separate line as (http://link)

(http://www.google.com)

Or if you want to have some text then [text](http://link)
[text](http://www.google.com)
Also notice there is less space around this link since we didn't leave an
empty line around it.

>>>
## Horizontal rule

Just do --- on an separate line

---
This is between rules.
---

>>>
## Bold and italic

You can use underscores to bold a piece of text, but it must appear on a
separate line (unlike markdown) _this_ doesn't do it, but
_this_
does.  It can be, as you can see in the middle of a paragraph, but it has
to be a separate line.
Other text can come after the second underscore like
_this_ as long as there are no more underscores.  This is
useful for putting punctuation after bold, or whenever you don't want
to leave a space right after bold.

>>>

Similarly you can use stars
*to make something italic* although you cannot combine italics and bold
like this (though you can just use html then)

>>>

Make sure to not add a space after the star:
* this* is not in italics, it is a bullet.

>>>

And again, to use a leading * in mathematics say, just don't make it the
first character on a line:
\[
3
 *5* \text{ok even if there are two stars on a line}.
\]

>>>
## Empty space

You can add a bit of empty space (for perhaps drawing or something) with ___ (three underscores) on an separate line

___

see ... there's empty space.

>>>

## Centering paragraphs

Putting a line inside inverted brackets will center it:

>this is centered<

>>>
## Draft mode

If the first line of the file is "!!!DRAFT!!!", then the -a mode will be turned
on.  Useful for editing so that you don't have to step through the steps,
useful if you have some sort of a script to run quickpres.pl.

>>>

As I was lazy to keep typing that, it can be replaced by "!-a" instead.
Eventually that may be a more general mechanism for passing any other command
line options, and draft mode may also diverge to have other features ...

>>>
## That's it

There's always a chunk of empty space added behind the presentation so
that you can scroll your ending to the middle easily.
